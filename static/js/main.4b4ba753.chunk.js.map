{"version":3,"sources":["hooks/useLocalStorage.js","Context/store.js","components/Task/Task.js","components/Stack/Stack.js","components/Heap/Heap.js","components/Notes/Note.js","components/Notes/Notes.js","components/CurrentTask/CurrentTask.js","components/GlobalTime/GlobalTime.js","components/Header/Header.js","App.js","reportWebVitals.js","index.js"],"names":["useLocalStorage","key","initialValue","prefixedKey","useState","jsonValue","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","meetingContext","createContext","MeetingContextProvider","props","stack","setStack","heap","setHeap","notes","setNotes","stackHistory","setStackHistory","undefined","Math","floor","Date","getTime","length","time","currentTaskTimer","setCurrentTaskTimer","startingTime","keyboardRemoveHandler","e","ctrlKey","shiftKey","which","stackLength","tempStack","splice","console","log","document","addEventListener","removeEventListener","Provider","newStackHandler","event","target","id","uuidv4","type","topic","newHeapHandler","taskRemoveHandler","taskIndex","findIndex","task","tempList","changeListHandler","tempHeap","clock","minutes","seconds","abs","hours","toString","clearAllHandler","window","location","reload","downloadSummaryHandler","htmlToText","require","stackText","join","text","i","push","j","notesText","text2","map","sum","element","createElement","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","children","Task","useContext","timer","setTimer","setInterval","clearInterval","className","onDoubleClick","changeList","title","onClick","remove","Stack","placeholder","onKeyDown","autoFocus","aria-flowto","Heap","Note","note","Notes","tempNotes","noteIndex","obj","CurrentTask","n","bars","setBars","tempBars","TimeBar","bar","GlobalTime","globalTimer","setGlobalTimer","Header","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4b4ba753.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst PREFIX = 'meeting-manament-';\r\n\r\n\r\nconst useLocalStorage = (key, initialValue) => {\r\n  const prefixedKey = PREFIX + key\r\n  const [value, setValue] = useState(() => {\r\n    const jsonValue = localStorage.getItem(prefixedKey)\r\n    if (jsonValue != null) return JSON.parse(jsonValue)\r\n    if (typeof initialValue === 'function') {\r\n      return initialValue()\r\n    } else {\r\n      return initialValue\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n  }, [prefixedKey, value])\r\n\r\n  return [value, setValue]\r\n}\r\n\r\n\r\nexport default useLocalStorage;","import React, { useState, createContext, useEffect } from 'react';\r\nimport useLocalStorage from '../hooks/useLocalStorage';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport const meetingContext = createContext();\r\n\r\n\r\nconst MeetingContextProvider = (props) => {\r\n\r\n  const [stack, setStack] = useLocalStorage('stack', []);\r\n  const [heap, setHeap] = useLocalStorage('heap', []);\r\n  const [notes, setNotes] = useLocalStorage('notes', []);\r\n  const [stackHistory, setStackHistory] = useLocalStorage('stackHistory', []);\r\n  const [currentTaskTimer, setCurrentTaskTimer] = useState(stack[0] !== undefined ? Math.floor((new Date().getTime() - stack[stack.length - 1].time) / 1000) : 0);\r\n  let startingTime = new Date().getTime();\r\n\r\n  // Create a new stack task\r\n  const newStackHandler = (event) => {\r\n    if (event.which === 13 && event.target.value !== '') {\r\n      setStack([\r\n        ...stack,\r\n        { id: uuidv4(), type: 'stack', topic: event.target.value, time: new Date().getTime() }\r\n      ]);\r\n      setStackHistory([...stackHistory,`<li>${event.target.value}</li>`]);\r\n      event.target.value = '';\r\n      console.log(stack)\r\n      setCurrentTaskTimer(Math.floor((new Date().getTime() - new Date().getTime()) / 1000));\r\n    };\r\n  };\r\n\r\n  // Create a new heap task\r\n  const newHeapHandler = (event) => {\r\n    if (event.which === 13 && event.target.value !== '') {\r\n      setHeap([\r\n        ...heap,\r\n        { id: uuidv4(), type: 'heap', topic: event.target.value, time: new Date().getTime() }\r\n      ]);\r\n      event.target.value = '';\r\n    };\r\n  };\r\n\r\n  // Removes a task\r\n  const taskRemoveHandler = (id, type) => {\r\n    if (type === 'stack') {\r\n      const taskIndex = stack.findIndex(task => {\r\n        return task.id === id;\r\n      });\r\n\r\n      let tempList = [...stack];\r\n      tempList.splice(taskIndex, 1);\r\n      setStack(tempList);\r\n      console.log(taskIndex)\r\n      setCurrentTaskTimer(stack[taskIndex - 1] !== undefined ? Math.floor((new Date().getTime() - stack[taskIndex - 1].time) / 1000) : 0);\r\n    };\r\n\r\n    if (type === 'heap') {\r\n      const taskIndex = heap.findIndex(task => {\r\n        return task.id === id;\r\n      });\r\n\r\n      let tempList = [...heap];\r\n      tempList.splice(taskIndex, 1);\r\n      setHeap(tempList)\r\n      console.log(taskIndex)\r\n    };\r\n    return console.log('taskRmoveHandler: ', stack);\r\n  }\r\n\r\n  // converts getTime() to hours, minutes, seconds\r\n  const clock = (time) => {\r\n    let minutes = Math.floor(time / 60);\r\n    let seconds = Math.abs(time % 60);\r\n    let hours = Math.floor(time / 3600);\r\n    minutes = minutes.toString().length === 1 ? \"0\" + minutes : minutes;\r\n    seconds = seconds.toString().length === 1 ? \"0\" + seconds : seconds;\r\n    hours = hours.toString().length === 1 ? \"0\" + hours : hours;\r\n    return ({ hours: hours, minutes: minutes, seconds: seconds })\r\n  }\r\n\r\n  // remove last stack with the keyboard\r\n  const keyboardRemoveHandler = (e) => {\r\n    if (e.ctrlKey && e.shiftKey && e.which === 88) {\r\n      let stackLength = stack.length;\r\n      let tempStack = [...stack];\r\n      tempStack.splice(tempStack.length - 1, 1);\r\n      setStack(tempStack);\r\n      setCurrentTaskTimer(stack[stackLength - 2] !== undefined ? Math.floor((new Date().getTime() - stack[stackLength - 2].time) / 1000) : 0);\r\n      console.log(currentTaskTimer)\r\n    }\r\n  }\r\n\r\n  // remove from stack with the keyboard\r\n  useEffect(() => {\r\n    if (document) {\r\n      document.addEventListener('keydown', keyboardRemoveHandler);\r\n    }\r\n    return () => {\r\n      document.removeEventListener('keydown', keyboardRemoveHandler);\r\n    }\r\n  }, [stack]);\r\n\r\n  \r\n  // move task between heap and stack\r\n  const changeListHandler = (id, type) => {\r\n    // move task from stack to heap\r\n    if (type === 'stack') {\r\n      const taskIndex = stack.findIndex(task => {\r\n        return task.id === id;\r\n      });\r\n      setHeap([...heap, { id: stack[taskIndex].id, type: 'heap', topic: stack[taskIndex].topic, time: stack[taskIndex].time }]);\r\n\r\n      let tempStack = [...stack];\r\n      tempStack.splice(taskIndex, 1);\r\n      setStack(tempStack);\r\n      console.log('change to heap ', stack, '  ', heap)\r\n    };\r\n    // move task from heap to stack\r\n    if (type === 'heap') {\r\n      const taskIndex = heap.findIndex(task => {\r\n        return task.id === id;\r\n      });\r\n      setStack([...stack, { id: heap[taskIndex].id, type: 'stack', topic: heap[taskIndex].topic, time: new Date().getTime }]);\r\n      setStackHistory([...stackHistory, `<li>${heap[taskIndex].topic}</li>`]);\r\n\r\n      let tempHeap = [...heap];\r\n      tempHeap.splice(taskIndex, 1);\r\n      setHeap(tempHeap);\r\n      console.log('change to stack ', stack, '  ', heap)\r\n    };\r\n  }\r\n\r\n  const clearAllHandler = () => {\r\n    setStack([]);\r\n    setHeap([]);\r\n    setNotes([]);\r\n    setStackHistory([]);\r\n    window.location.reload()\r\n  }\r\n\r\n\r\n  const downloadSummaryHandler = () => {\r\n    const { htmlToText } = require('html-to-text');\r\n\r\n    // convert stack to HTML tags\r\n    const stackText = '<h3>Stack</h3><ul>' + stackHistory.join(' ') + '</ul>';\r\n    \r\n    // convert notes to HTML tags\r\n    let text = [];\r\n    for(let i = 0; i < notes.length; i++){\r\n      text.push(`<h5>${notes[i].topic}:</h5>`);\r\n      for(let j = 0; j < notes[i].notes.length; j++){\r\n        text.push(`<li>${notes[i].notes[j]}</li>`)\r\n      }\r\n    }\r\n    const notesText = '<h3>Notes</h3><ul>' + text.join(' ') + '</ul>';\r\n    console.log('notesText', notesText)\r\n    \r\n    // convert heap to HTML tags\r\n    let text2 = [];\r\n    heap.map((task)=>(text2.push(`<li>${task.topic}</li>`)));\r\n    const heapText = '<h3>Heap</h3><ul>' + text2.join(' ') + '</ul>';\r\n    const sum = htmlToText(stackText + notesText + heapText)\r\n\r\n    // create blob to download rtf file\r\n    const element = document.createElement(\"a\");\r\n    const file = new Blob([sum], { type: \"text/plain\" });\r\n    element.href = URL.createObjectURL(file);\r\n    element.download = \"meetingSummary.rtf\";\r\n    document.body.appendChild(element);\r\n    element.click();\r\n    // clearAllHandler();\r\n  }\r\n\r\n\r\n  return (\r\n    <meetingContext.Provider value={\r\n      {\r\n        stack,\r\n        setStack,\r\n        heap,\r\n        notes,\r\n        setNotes,\r\n        stackHistory,\r\n        startingTime,\r\n        newStackHandler,\r\n        newHeapHandler,\r\n        taskRemoveHandler,\r\n        changeListHandler,\r\n        clock,\r\n        currentTaskTimer,\r\n        setCurrentTaskTimer,\r\n        clearAllHandler,\r\n        downloadSummaryHandler\r\n      }\r\n    }>\r\n      {props.children}\r\n    </meetingContext.Provider>\r\n  );\r\n}\r\n\r\nexport default MeetingContextProvider;\r\n\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { meetingContext } from '../../Context/store';\r\nimport './Task.css';\r\n\r\nconst Task = (props) => {\r\n  const { clock } = useContext(meetingContext);\r\n  const [timer, setTimer] = useState(Math.floor((new Date().getTime() - props.time) / 1000));\r\n\r\n  let time = clock(timer);\r\n  \r\n  useEffect(() => {\r\n    const id = window.setInterval(() => {\r\n      setTimer(Math.floor((new Date().getTime() - props.time) / 1000));\r\n    }, 30000);\r\n    console.log(timer)\r\n    return () => window.clearInterval(id);\r\n  }, [timer])\r\n\r\n\r\n  return (\r\n    <li className='task-item' key={props.id} onDoubleClick={props.changeList}>\r\n      {props.type !== 'heap' ? <div> <span className=\"duration-display\" > {time.minutes}:{time.seconds} </span> </div> : null}\r\n      <label className='task-title' >{props.title}</label>\r\n      <button className=\"remove\" onClick={props.remove}>X</button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n\r\n","import React, { useContext } from 'react';\r\nimport Task from '../Task/Task';\r\nimport { meetingContext } from '../../Context/store';\r\nimport './Stack.css';\r\n\r\nconst Stack = () => {\r\n\r\n  const { stack, newStackHandler, taskRemoveHandler, changeListHandler } = useContext(meetingContext);\r\n\r\n  return (\r\n    \r\n      <fieldset className=\"stack-container\">\r\n        {console.log('stack: ', stack)}\r\n        <legend>Stack</legend>\r\n        <ul className=\"stack-list\">\r\n          {stack !== undefined ? stack.map((task, id) => (\r\n            <Task key={id} \r\n            time={task.time} \r\n            title={task.topic} \r\n            type={task.type} \r\n            remove={() => taskRemoveHandler(task.id, task.type)}\r\n            changeList={() => changeListHandler(task.id, task.type)} />\r\n          )) : null}\r\n        </ul>\r\n        <input type=\"text\" placeholder=\"Add a task to stack\" onKeyDown={newStackHandler} className='stack-input' autoFocus aria-flowto='heap-input' />\r\n      </fieldset>\r\n    \r\n  );\r\n}\r\n\r\nexport default Stack;\r\n\r\n","import React, { useContext } from 'react';\r\nimport Task from '../Task/Task';\r\nimport { meetingContext } from '../../Context/store';\r\nimport MeetingContextProvider from '../../Context/store';\r\nimport './Heap.css';\r\n\r\nconst Heap = () => {\r\n  const { heap, newHeapHandler, taskRemoveHandler, changeListHandler } = useContext(meetingContext);\r\n\r\n\r\n  return (\r\n    <MeetingContextProvider>\r\n      <fieldset className=\"heap-container\">\r\n        <legend>Heap</legend>\r\n        <input type=\"text\" placeholder=\"Add a task to heap\" onKeyDown={newHeapHandler} className='heap-input' aria-flowto='notes-input' />\r\n        <ul className=\"heap-list\">\r\n          {heap[0] !== undefined ? heap.map((task, id) => (\r\n            <Task key={id} \r\n            title={task.topic} \r\n            type={task.type} \r\n            remove={() => taskRemoveHandler(task.id, task.type)} \r\n            changeList={() => changeListHandler(task.id, task.type)} />\r\n          )) : null}\r\n        </ul>\r\n      </fieldset>\r\n    </MeetingContextProvider>\r\n  );\r\n}\r\n\r\nexport default Heap;","import React from 'react';\r\n\r\nconst Note = (props) => {\r\n  return (\r\n    <>\r\n      <dt>{props.title}:</dt>\r\n      {props.notes.map((note, id) => (\r\n        <dd key={id}>{note}</dd>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Note;","import React, { useContext } from 'react';\r\nimport './Notes.css';\r\nimport { meetingContext } from '../../Context/store';\r\nimport Note from './Note';\r\n\r\n\r\nconst Notes = () => {\r\n  const { stack, setStack, notes, setNotes } = useContext(meetingContext);\r\n\r\n  const newNoteHandler = (event) => {\r\n    if (event.which === 13 && event.target.value !== '') {\r\n      let tempStack = [...stack];\r\n      tempStack[tempStack.length - 1].notes ? tempStack[tempStack.length - 1].notes.push(event.target.value) : tempStack[tempStack.length - 1].notes = [event.target.value];\r\n      setStack(tempStack);\r\n      \r\n      let tempNotes = [...notes];\r\n      let noteIndex = tempNotes.findIndex(obj => {return obj.topic === stack[stack.length-1].topic});\r\n      noteIndex === -1 ? tempNotes.push({topic: stack[stack.length-1].topic, notes: [event.target.value], id: stack[stack.length-1].id }) : tempNotes[noteIndex].notes.push(event.target.value);\r\n      setNotes(tempNotes);\r\n      event.target.value = '';\r\n    };\r\n    console.log(notes)\r\n  }\r\n\r\n  return (\r\n    <fieldset className='notes-container'>\r\n      <legend>Notes</legend>\r\n      <input type='text' placeholder=\"Add a note for the current stack\" className='notes-input' onKeyDown={newNoteHandler} aria-flowto='stack-input' />\r\n      <dl>\r\n        {notes[0] !== undefined ? notes.map((task, id) => (\r\n          task.notes !== undefined ?\r\n          <Note\r\n            key={id}\r\n            title={task.topic}\r\n            notes={task.notes}\r\n          /> : null\r\n        )) : null}\r\n      </dl>\r\n    </fieldset>\r\n  );\r\n}\r\n\r\nexport default Notes;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { meetingContext } from '../../Context/store';\r\nimport './CurrentTask.css';\r\n\r\n\r\nconst CurrentTask = () => {\r\n\r\n  const { stack, clock, currentTaskTimer, setCurrentTaskTimer } = useContext(meetingContext);\r\n\r\n  // Current task timer (every 30 secs)\r\n  useEffect(() => {\r\n    if (stack[0] !== undefined) {\r\n      const id = window.setInterval(() => {\r\n        setCurrentTaskTimer(Math.floor((new Date().getTime() - stack[stack.length - 1].time) / 1000));\r\n      }, 30000);\r\n      return () => window.clearInterval(id);\r\n    }\r\n  });\r\n\r\n  // Start bars count (every 60 secs)\r\n  let n = 0;\r\n  const [bars, setBars] = useState([]);\r\n  useEffect(() => {\r\n    if (stack[0] !== undefined) {\r\n      const id = window.setInterval(() => {\r\n        n += 1;\r\n        let tempBars = [...bars];\r\n        tempBars.push({ id: n });\r\n        setBars(tempBars);\r\n        console.log(bars)\r\n      }, 60000);\r\n      return () => window.clearInterval(id);\r\n    }\r\n  }, [bars]);\r\n  \r\n  // Restart bars count on stack change\r\n  useEffect(() => {\r\n    n = 0;\r\n    setBars([]);\r\n  },[stack])\r\n\r\n  let time = clock(currentTaskTimer);\r\n  console.log('current ', currentTaskTimer);\r\n\r\n  const taskExists = () => {\r\n    return (\r\n      <>\r\n        {time.minutes}:{time.seconds}\r\n      </>\r\n    )\r\n  };\r\n\r\n  const TimeBar = () => {\r\n    return (\r\n      <div className='time-bars'></div>\r\n    )\r\n  };\r\n\r\n  return (\r\n    <div className='current-task-container'>\r\n      <div className='current-timer'><h4>{stack[0] !== undefined ? (taskExists()) : null}</h4></div>\r\n      <div className='current-title'><h1>{stack[0] !== undefined ? stack[stack.length - 1].topic : null}</h1></div>\r\n      <div className='current-task-background'>\r\n        {bars.map((bar, id) => (<TimeBar key={id} />))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CurrentTask;","import React, { useState, useEffect, useContext } from 'react';\r\nimport './GlobalTime.css';\r\nimport { meetingContext } from '../../Context/store';\r\n\r\n\r\nconst GlobalTime = () => {\r\n  const { clock, startingTime } = useContext(meetingContext);\r\n\r\n  const [globalTimer, setGlobalTimer] = useState(Math.floor((new Date().getTime() - startingTime) / 1000));\r\n  let time = clock(globalTimer);\r\n\r\n  useEffect(() => {\r\n    const id = window.setInterval(() => {\r\n      setGlobalTimer(Math.floor((new Date().getTime() - startingTime) / 1000));\r\n    }, 60000);\r\n    console.log(globalTimer)\r\n    return () => window.clearInterval(id);\r\n\r\n  }, [])\r\n\r\n  return (\r\n    <div className='global-timer'>{time.hours}:{time.minutes}:{time.seconds}</div>\r\n  );\r\n}\r\n\r\nexport default GlobalTime;","import React, { useContext } from 'react';\r\nimport GlobalTime from '../GlobalTime/GlobalTime';\r\nimport { meetingContext } from '../../Context/store';\r\nimport './Header.css';\r\n\r\n\r\n\r\nconst Header = () => {\r\n\r\n  const { clearAllHandler, downloadSummaryHandler } = useContext(meetingContext);\r\n\r\n\r\n  return (\r\n    <header className='header'>\r\n      <div className='header-left'>\r\n        <GlobalTime />\r\n        <button className='end-meeting-btn' onClick={downloadSummaryHandler}>End meeting</button>\r\n      </div>\r\n      <div className='header-center'>\r\n        <h5 className=\"instructions\">Ctrl+Shift+X: Removes current stack  |  Double click: Moves the task between lists  |  Alt+S: Start/stop the timer</h5>\r\n      </div>\r\n      <div className='header-right'>\r\n        <button className='clear-btn' onClick={clearAllHandler}>Clear all</button>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import './App.css';\nimport React from 'react';\nimport Stack from './components/Stack/Stack';\nimport MeetingContextProvider from './Context/store';\nimport Heap from './components/Heap/Heap';\nimport Notes from './components/Notes/Notes';\nimport CurrentTask from './components/CurrentTask/CurrentTask';\nimport Header from './components/Header/Header';\n\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <MeetingContextProvider>\n        <Header />\n        <CurrentTask />\n        <Stack />\n        <Notes />\n        <Heap />\n      </MeetingContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}